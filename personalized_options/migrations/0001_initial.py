# Generated by Django 2.0 on 2018-01-12 19:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityPattern',
            fields=[
                ('activity_id', models.PositiveIntegerField(db_index=True, primary_key=True, serialize=False)),
                ('metropia_id', models.IntegerField(help_text='Unique ID for each Metropia user')),
                ('pattern_type', models.CharField(choices=[('Commute', 'Commute'), ('Shopping', 'Shopping'), ('School Pickup', 'School Pickup')], default='Commute', max_length=100)),
                ('from_lat', models.FloatField(help_text='Start latitude')),
                ('from_lon', models.FloatField(help_text='Start longitude')),
                ('to_lat', models.FloatField(help_text='End latitude')),
                ('to_lon', models.FloatField(help_text='End longitude')),
                ('start_time', models.TimeField(help_text='Start time of the activity')),
                ('end_time', models.TimeField(help_text='End time of the activity')),
                ('add_datetime', models.DateTimeField(auto_now_add=True, help_text='Date & time when this activity pattern was added')),
                ('mod_datetime', models.DateTimeField(auto_now_add=True, help_text='Date & time when this activity pattern was last modified')),
                ('travel_plan_update_datetime', models.DateTimeField(blank=True, help_text='Date & time when travel plans for this activity pattern was updated', null=True)),
                ('avail_travel_options', models.TextField(blank=True, help_text='A list of available travel options for this activity pattern')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_patterns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'activity_pattern',
                'get_latest_by': ('travel_plan_update_datetime', 'mod_datetime', 'add_datetime'),
            },
        ),
        migrations.CreateModel(
            name='BikeAndRide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.FloatField()),
                ('wait_time', models.IntegerField()),
                ('travel_time', models.IntegerField()),
                ('activity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personalized_options.ActivityPattern')),
            ],
            options={
                'abstract': False,
                'db_table': 'bike_and_ride',
            },
        ),
        migrations.CreateModel(
            name='BikeTransit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.FloatField()),
                ('wait_time', models.IntegerField()),
                ('travel_time', models.IntegerField()),
                ('activity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personalized_options.ActivityPattern')),
            ],
            options={
                'abstract': False,
                'db_table': 'bike_transit',
            },
        ),
        migrations.CreateModel(
            name='Biking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.FloatField()),
                ('wait_time', models.IntegerField()),
                ('travel_time', models.IntegerField()),
                ('activity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personalized_options.ActivityPattern')),
            ],
            options={
                'abstract': False,
                'db_table': 'biking',
            },
        ),
        migrations.CreateModel(
            name='Driving',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.FloatField()),
                ('wait_time', models.IntegerField()),
                ('travel_time', models.IntegerField()),
                ('congestion_level', models.IntegerField()),
                ('activity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personalized_options.ActivityPattern')),
            ],
            options={
                'abstract': False,
                'db_table': 'driving',
            },
        ),
        migrations.CreateModel(
            name='KissAndRide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.FloatField()),
                ('wait_time', models.IntegerField()),
                ('travel_time', models.IntegerField()),
                ('activity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personalized_options.ActivityPattern')),
            ],
            options={
                'abstract': False,
                'db_table': 'kiss_and_ride',
            },
        ),
        migrations.CreateModel(
            name='ParkAndRide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.FloatField()),
                ('wait_time', models.IntegerField()),
                ('travel_time', models.IntegerField()),
                ('activity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personalized_options.ActivityPattern')),
            ],
            options={
                'abstract': False,
                'db_table': 'park_and_ride',
            },
        ),
        migrations.CreateModel(
            name='Uber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.FloatField()),
                ('wait_time', models.IntegerField()),
                ('travel_time', models.IntegerField()),
                ('cost_low', models.IntegerField()),
                ('high_low', models.IntegerField()),
                ('product', models.CharField(max_length=100)),
                ('activity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personalized_options.ActivityPattern')),
            ],
            options={
                'abstract': False,
                'db_table': 'uber',
            },
        ),
        migrations.CreateModel(
            name='Walking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.FloatField()),
                ('wait_time', models.IntegerField()),
                ('travel_time', models.IntegerField()),
                ('activity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personalized_options.ActivityPattern')),
            ],
            options={
                'abstract': False,
                'db_table': 'walking',
            },
        ),
        migrations.CreateModel(
            name='WalkTransit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.FloatField()),
                ('wait_time', models.IntegerField()),
                ('travel_time', models.IntegerField()),
                ('activity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personalized_options.ActivityPattern')),
            ],
            options={
                'abstract': False,
                'db_table': 'walk_transit',
            },
        ),
        migrations.AddIndex(
            model_name='activitypattern',
            index=models.Index(fields=['activity_id'], name='activity_id_idx'),
        ),
    ]
